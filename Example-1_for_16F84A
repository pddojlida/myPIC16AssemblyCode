;---------EXAMPLE-1 FOR 16F84A (adapted by Peter Dojlida) ----------

;---------Original code can be found at http://onlinepiccompiler.com-----------

;---------ADDITION OF THREE 8-BIT NUMBERS---------

; The code adds VALUE1, VALUE2, and VALUE3, then writes 
; the LSB 8 bits of the result in RESULT_L and the most significant bit to RESULT_H.

; The original code only adds two numbers. It has been adapted to add three numbers.
; Because the three numbers do NOT add to >= 256 there is no RESULT_H, as opposed to the original code.

;---------------------------------------------------------------------------------

; ---------Memory allocations for VALUE 1, VALUE 2, VALUE 3, RESULT_L, and RESULT_H---------
 
;This is where the numerical values of the the variables will be stored once 
; the variables are initialized with numerical values.

VALUE1 EQU 0X0C
VALUE2 EQU 0X0D
VALUE3 EQU 0X0E
RESULT_L EQU 0X0F
RESULT_H EQU 0X10

;---------Initializations---------

CLRF RESULT_L         ; Clear RESULT_L, i.e., RESULT_L=0 
CLRF RESULT_H         ; Clear RESULT_H, i.e., RESULT_H=0
MOVLW 0X2B            ; W = 0X2B = 43
MOVWF VALUE1          ; VALUE1 = 43
MOVLW 0X2B            ; W = 0X2B = 43
MOVWF VALUE2          ; VALUE2 = 43
MOVLW 0X2B            ; W = 0X2B = 43
MOVWF VALUE3          ; VALUE3 = 43


;---------START PROGRAM---------

MOVF VALUE1,0        ; VALUE1 is loaded into register W, because d = 0
ADDWF VALUE2,0       ; Content of register W are added to VALUE2 and stored in W, because d = 0
ADDWF VALUE3,0       ; Content of register W are added to VALUE3 and stored in W, because d = 0
BTFSC STATUS,0       ; Skip next line if carry bit is clear because the summation of the values is < 256
INCF RESULT_H,1      ; if summation of the values >= 256, then RESULT_H = 1
MOVWF RESULT_L       ; W is loaded into RESULT_L 

FINAL_LOOP           ; Program stays in the loop forever after the summation has been calculated
GOTO FINAL_LOOP
